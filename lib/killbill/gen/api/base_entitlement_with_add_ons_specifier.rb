#############################################################################################
#                                                                                           #
#                   Copyright 2010-2013 Ning, Inc.                                          #
#                   Copyright 2014 Groupon, Inc.                                            #
#                   Copyright 2014 The Billing Project, LLC                                 #
#                                                                                           #
#      The Billing Project licenses this file to you under the Apache License, version 2.0  #
#      (the "License"); you may not use this file except in compliance with the             #
#      License.  You may obtain a copy of the License at:                                   #
#                                                                                           #
#          http://www.apache.org/licenses/LICENSE-2.0                                       #
#                                                                                           #
#      Unless required by applicable law or agreed to in writing, software                  #
#      distributed under the License is distributed on an "AS IS" BASIS, WITHOUT            #
#      WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the            #
#      License for the specific language governing permissions and limitations              #
#      under the License.                                                                   #
#                                                                                           #
#############################################################################################


#
#                       DO NOT EDIT!!!
#    File automatically generated by killbill-java-parser (git@github.com:killbill/killbill-java-parser.git)
#


module Killbill
  module Plugin
    module Model

      java_package 'org.killbill.billing.entitlement.api'
      class BaseEntitlementWithAddOnsSpecifier

        include org.killbill.billing.entitlement.api.BaseEntitlementWithAddOnsSpecifier

        attr_accessor :bundle_id, :external_key, :entitlement_specifier, :entitlement_effective_date, :billing_effective_date, :is_migrated

        def initialize()
        end

        def to_java()
          # conversion for bundle_id [type = java.util.UUID]
          @bundle_id = java.util.UUID.fromString(@bundle_id.to_s) unless @bundle_id.nil?

          # conversion for external_key [type = java.lang.String]
          @external_key = @external_key.to_s unless @external_key.nil?

          # conversion for entitlement_specifier [type = java.lang.Iterable]
          tmp = java.util.ArrayList.new
          (@entitlement_specifier || []).each do |m|
            # conversion for m [type = org.killbill.billing.entitlement.api.EntitlementSpecifier]
            m = m.to_java unless m.nil?
            tmp.add(m)
          end
          @entitlement_specifier = tmp

          # conversion for entitlement_effective_date [type = org.joda.time.LocalDate]
          if !@entitlement_effective_date.nil?
            @entitlement_effective_date = Java::org.joda.time.LocalDate.parse(@entitlement_effective_date.to_s)
          end

          # conversion for billing_effective_date [type = org.joda.time.LocalDate]
          if !@billing_effective_date.nil?
            @billing_effective_date = Java::org.joda.time.LocalDate.parse(@billing_effective_date.to_s)
          end

          # conversion for is_migrated [type = boolean]
          @is_migrated = @is_migrated.nil? ? java.lang.Boolean.new(false) : java.lang.Boolean.new(@is_migrated)
          self
        end

        def to_ruby(j_obj)
          # conversion for bundle_id [type = java.util.UUID]
          @bundle_id = j_obj.bundle_id
          @bundle_id = @bundle_id.nil? ? nil : @bundle_id.to_s

          # conversion for external_key [type = java.lang.String]
          @external_key = j_obj.external_key

          # conversion for entitlement_specifier [type = java.lang.Iterable]
          @entitlement_specifier = j_obj.entitlement_specifier
          tmp = []
          (@entitlement_specifier.nil? ? [] : @entitlement_specifier.iterator).each do |m|
            # conversion for m [type = org.killbill.billing.entitlement.api.EntitlementSpecifier]
            m = Killbill::Plugin::Model::EntitlementSpecifier.new.to_ruby(m) unless m.nil?
            tmp << m
          end
          @entitlement_specifier = tmp

          # conversion for entitlement_effective_date [type = org.joda.time.LocalDate]
          @entitlement_effective_date = j_obj.entitlement_effective_date
          if !@entitlement_effective_date.nil?
            @entitlement_effective_date = @entitlement_effective_date.to_s
          end

          # conversion for billing_effective_date [type = org.joda.time.LocalDate]
          @billing_effective_date = j_obj.billing_effective_date
          if !@billing_effective_date.nil?
            @billing_effective_date = @billing_effective_date.to_s
          end

          # conversion for is_migrated [type = boolean]
          @is_migrated = j_obj.is_migrated
          if @is_migrated.nil?
            @is_migrated = false
          else
            tmp_bool = (@is_migrated.java_kind_of? java.lang.Boolean) ? @is_migrated.boolean_value : @is_migrated
            @is_migrated = tmp_bool ? true : false
          end
          self
        end

      end
    end
  end
end
